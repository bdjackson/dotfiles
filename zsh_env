# ==============================================================================
# = Resolve this computer - save as $ME
# ==============================================================================
# case "$HOSTNAME" in
echo "`hostname`"
case "`hostname`" in
  bjackson*|Bretts-MacBook-Pro-2.local)
  echo "ME = laptop"
  export ME="laptop"
  ;;
  adminisurussmbp*|Adminisauruss*)
  echo "ME = vw_laptop"
  export ME="vw_laptop"
  ;;
  *)
  echo "ME = unknown"
  export ME=""
  ;;
esac


# ==============================================================================
# = Ignore <ctrl>-d to avoid inadvertantly quitting shell
# ==============================================================================
set -o ignoreeof


# ==============================================================================
# = Helper functions for setting up environment
# ==============================================================================
function safe_add_to_path {
  if [[ -e ${1} ]] ; then
    export PATH=${1}:${PATH}
  fi
}

function safe_alias {
  if [[ -e ${1} ]] ; then
    alias ${1}=${2}
  fi
}


# ==============================================================================
# = Add ${HOME}/anaconda3/bin to path -- wanted by anaconda
# ==============================================================================
safe_add_to_path ${HOME}/anaconda3/bin


# ==============================================================================
# = Add /opt/local/bin to path -- wanted by macports
# ==============================================================================
safe_add_to_path /opt/local/bin


# ==============================================================================
# = Add /usr/local/bin and /usr/local/sbin to path -- wanted by homebrew
# ==============================================================================
safe_add_to_path /usr/local/bin
safe_add_to_path /usr/local/sbin


# ==============================================================================
# = Python aliases to have some extra control
# ==============================================================================
safe_alias ${HOME}/anaconda3/bin/python conda_python
safe_alias ${HOME}/anaconda3/bin/python3 conda_python3
safe_alias /opt/local/bin/python opt_python
safe_alias /opt/local/bin/python3 opt_python2


# ==============================================================================
# = Virtualenv/VirtualenvWrapper
# ==============================================================================
if [ -e /usr/local/bin/virtualenvwrapper.sh ] ; then
  export VIRTUALENVWRAPPER_PYTHON=/usr/local/bin/python3
  source /usr/local/bin/virtualenvwrapper.sh

elif [ -e ${HOME}/.local/bin/virtualenvwrapper.sh ] ; then
  export VIRTUALENVWRAPPER_PYTHON=/usr/bin/python3
  source ${HOME}/.local/bin/virtualenvwrapper.sh
  export PATH=${HOME}/.local/bin/:$PATH

elif [ -e /opt/local/Library/Frameworks/Python.framework/Versions/3.7/bin/virtualenvwrapper.sh ] ; then
  export VIRTUALENVWRAPPER_PYTHON=/opt/local/bin/python3
  source /opt/local/Library/Frameworks/Python.framework/Versions/3.7/bin/virtualenvwrapper.sh
  export PATH=/opt/local/Library/Frameworks/Python.framework/Versions/3.7/bin/:$PATH
fi


# ==============================================================================
# = Personal settings
# ==============================================================================
export PYTHONSTARTUP="${HOME}/.pythonrc"

# set colors for grep
# export GREP_OPTIONS='--color=auto'
export GREP_COLOR='1;32' # bright green

# Turn off sharing history across terminals - don't want to confuse sessions
setopt no_share_history


# ==============================================================================
# = Set up aliases
# ==============================================================================
source ${HOME}/.zsh_aliases


# ==============================================================================
# = Set up CUDA
# ==============================================================================
if [[ -e /usr/local/cuda-8.0 ]] ; then
  export PATH=/usr/local/cuda-8.0/bin:$PATH
  export LD_LIBRARY_PATH=/usr/local/cuda-8.0/lib64/:$LD_LIBRARY_PATH
fi


# ==============================================================================
# ==============================================================================
# = Graveyard
# ==============================================================================
# ==============================================================================

# # ==============================================================================
# # = Python
# # ==============================================================================
# if [ "$ME" = "laptop" ]; then
#   export PATH=/usr/local/bin:$PATH
# fi


# # ==============================================================================
# # = Set up python path
# # ==============================================================================
# if [ "$ME" = "here_laptop" ]; then
#   export PYTHONPATH=$PYTHONPATH:${HOME}/.local/lib/python3.6/site-packages/
#   export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib/
# fi


# # ==============================================================================
# # = Set up spark
# # ==============================================================================
# if [ "$ME" = "here_laptop" ]; then
#   export SPARK_HOME="/usr/local/Cellar/apache-spark/1.6.1/libexec/"
#   export PATH=$SPARK_HOME/bin:$PATH
# 
#   export PYTHONPATH=$SPARK_HOME/python/lib/py4j-0.8.2.1-src.zip:$SPARKHOME/python/:$PYTHONPATH
# 
#   # used for pyspark in a jupyter notebook
#   export PACKAGES="com.databricks:spark-csv_2.11:1.4.0"
#   export PYSPARK_SUBMIT_ARGS="--packages ${PACKAGES} pyspark-shell"
# elif [ "$ME" = "here_jupiter" ]; then
#   export SPARK_HOME=/usr/local/spark
#   export PATH=$SPARK_HOME/bin:$PATH
# 
#   umask 002
# fi


# # ==============================================================================
# # = Add kubectl to env
# # ==============================================================================
# if [[ "$ME" = "here_trappist" ]] ; then
#   export KUBECONFIG=$KUBECONFIG:~/.kube/config
#   export KUBECONFIG=$KUBECONFIG:~/.kube/config-deepcto
# fi
