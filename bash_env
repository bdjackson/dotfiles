#!/bin/bash

# control
START_SCREEN=false
SETUP_GCC=true
SETUP_PYTHON=true
SETUP_ROOT=true
SETUP_NUMPY=true
SETUP_ORACLE=false
SETUP_PYQT=false
python_version="2.7"

# colors
BLACK='\033[0;30m'
BLUE='\033[0;34m'
GREEN='\033[0;32m'
CYAN='\033[0;36m'
RED='\033[0;31m'
PURPLE='\033[0;35m'
BROWN='\033[0;33m'
LIGHTGRAY='\033[0;37m'
DARKGRAY='\033[1;30m'
LIGHTBLUE='\033[1;34m'
LIGHTGREEN='\033[1;32m'
LIGHTCYAN='\033[1;36m'
LIGHTRED='\033[1;31m'
LIGHTPURPLE='\033[1;35m'
YELLOW='\033[1;33m'
WHITE='\033[1;37m'
NC='\033[0m'

# ==============================================================================
# = Resolve this computer - save as $ME
# ==============================================================================
# case "$HOSTNAME" in
case "`hostname`" in
  lxplus*|pc-penn-*|trtdaq2)
  export ME="afs"
  ;;
  a*.hep.upenn.edu)
  export ME="pennt3";
  ;;
  *.hep.upenn.edu)
  export ME="penn"
  ;;
  bjackson|bjackson-pro|bjackson-air)
  export ME="laptop"
  ;;
  brett-netbook)
  export ME="netbook"
  ;;
  *)
  echo -e "${LIGHTRED}~/.bash_env doesn't recognize this host, ${HOSTNAME}.  Let's hope it has afs.${NC}"
  export ME="afs"
  ;;
esac

if [ "$ME" = "afs" ]; then
  export SLC_version=`head -1 /etc/issue | awk -F"release" '{print $2}' | sed "s/[^0-9.]"//g | awk -F"." '{print $1}'`
  export PLATFORM=`uname -i`
fi

# ==============================================================================
# = Set up colors on laptop
# ==============================================================================
if [ "$ME" = "laptop" ]; then
  echo "setting up colors"
  export CLICOLOR=1
  export LSCOLORS=ExFxCxDxBxegedabagacad
else
  alias ls='ls --color'
fi

# ==============================================================================
# = setup ATLAS software
# ==============================================================================
if [ "$ME" = "pennt3" ]; then
  if [ "$SSH_TTY" ]; then
    echo "setupATLAS"
    source /etc/bashrc
    if [ `hostname` == "at3f*" ]; then
      echo "on worker node. Manually setting setupATLAS alias"
      alias setupATLAS='source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh'
    fi
  fi
  setupATLAS
fi

# ==============================================================================
# = Start screen
# ==============================================================================
if $START_SCREEN ; then
  case "$ME" in
    # laptop)
    laptop|netbook)
    true # pass
    ;;
    *)
    if [ "$PS1" != "" -a "${_STARTED_SCREEN:-x}" = x -a "${SSH_TTY:-x}" ]
      then
      export _STARTED_SCREEN=1;
      sleep 1
      screen -RR && exit 0
      # normally, execution of this rc script ends here... 
      echo "Screen failed! continuing with normal bash startup" 
    fi
    ;;
  esac
fi

# ==============================================================================
# = Welcome
# ==============================================================================
path()
{
  echo $1 | awk -F : '{for (i=1;i<=NF;i++) {print "    "i".",$i}}'
}

env_info()
{
  echo -en "  ${LIGHTCYAN}system: ${NC}"; uname -srmpio
  echo -en "  ${LIGHTCYAN}os:${NC}     "; head -1 /etc/issue
  echo -en "  ${LIGHTCYAN}uptime:${NC} "; uptime
  echo -en "  ${LIGHTCYAN}gcc:${NC}    "; which gcc
  echo -en "  ${LIGHTCYAN}python:${NC} "; which python
  echo -e "  ${LIGHTCYAN}ROOT:${NC}   ${ROOTSYS}"
  echo -e "  ${LIGHTCYAN}PATH:${NC}"
  path ${PATH}
  echo -e "  ${LIGHTCYAN}LD_LIBRARY_PATH:${NC}"
  path ${LD_LIBRARY_PATH}
  echo -e "  ${LIGHTCYAN}PYTHONPATH${NC}"
  path ${PYTHONPATH}
}
alias envi="env_info"

welcome()
{
  echo -e "Hello ${LIGHTGREEN}${USER}${NC}.  Welcome to ${LIGHTGREEN}${HOSTNAME}${NC}."
  echo -e "Today is ${LIGHTGREEN}`date`${NC}"
  echo -e "kernel: ${LIGHTCYAN}`uname -srm`${NC}"
  echo -e "os:    ${LIGHTCYAN}" "`head -1 /etc/issue | cut -d'\\' -f1`" "${NC}"
  echo -e "uptime:${LIGHTCYAN}`uptime`${NC}"
}

if [ "$ME" = "laptop" ] || [ "$ME" = "netbook" ] || [ "$SSH_TTY" ]; then
  welcome
fi

# ==============================================================================
# = Set Prompt
# ==============================================================================
PS1="[\t] \u@\h:\W \$ "

# ==============================================================================
# = Ignore <ctrl>-d to avoid inadvertantly quitting shell
# ==============================================================================
set -o ignoreeof

# ==============================================================================
# = Various SVN servers
# ==============================================================================
export SVNATLAS=svn+ssh://bjackson@svn.cern.ch/reps
export SVNOFF=svn+ssh://bjackson@svn.cern.ch/reps/atlasoff
export SVNGRP=svn+ssh://bjackson@svn.cern.ch/reps/atlasgrp
export SVNUSR=svn+ssh://bjackson@svn.cern.ch/reps/atlasusr
export SVNPERF=svn+ssh://bjackson@svn.cern.ch/reps/atlasperf
export SVNPHYS=svn+ssh://bjackson@svn.cern.ch/reps/atlasphys
export SVNPENN=svn+ssh://bjackson@svn.cern.ch/reps/penn
export SVNTRT=svn+ssh://svn.cern.ch/reps/trtdaq
export SVNIRVINE=svn+ssh://bjackson@svn.cern.ch/reps/atlasinst/Institutes/UCIrvine
export SVNINST=svn+ssh://svn.cern.ch/reps/atlasinst
export SVNROOT=${SVNOFF}

# ==============================================================================
# = Personal libs and bins
# ==============================================================================
export PATH=$HOME:$PATH
export PATH=$HOME/code/bash:$PATH
export PATH=$HOME/code/python:$PATH
# export LD_LIBRARY_PATH=$HOME/code/cxx/lib:$LD_LIBRARY_PATH
if [ $ME = "laptop" ] || [ "$ME" = "netbook" ]; then
    # export PATH=/apps:$PATH
    export PATH=/usr/local:$PATH
fi
if [ $ME = "laptop" ]; then
    export PATH=${HOME}/bin:$PATH
    # export EDITOR="$HOME/bin/mate -w"
fi

# ==============================================================================
# = various other defines
# ==============================================================================
export REMOVE_COLOR='sed -r s/\x1B\[([0-9]{1,2}(;[0-9]{1,2})?)?[m|K]//g'

# ==============================================================================
# = gcc
# ==============================================================================
if $SETUP_GCC ; then
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  if [ $ME = "afs" ]; then
    # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    if [ $SLC_version = "5" ] && [ $PLATFORM = "x86_64" ]; then
      if [ "$SSH_TTY" ]; then
        echo " - setting up gcc 4.7 for SLC5"
      fi
      source /afs/cern.ch/sw/lcg/external/gcc/4.3.6/x86_64-slc5/setup.sh
    # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    elif [ $SLC_version = "6" ] && [ $PLATFORM = "x86_64" ]; then
      if [ "$SSH_TTY" ]; then
        echo " - setting up gcc 4.6 for SLC6"
      fi
      source /afs/cern.ch/sw/lcg/contrib/gcc/4.7/x86_64-slc6/setup.sh
    # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    else
      if [ "$SSH_TTY" ]; then
        echo "  - not setting up gcc"
      fi
    fi
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  elif [ $ME = "pennt3" ]; then
    if [ "$SSH_TTY" ]; then
      echo " - setting up gcc for PennT3"
    fi
    localSetupGcc --gccVersion=gcc432_x86_64_slc5 --quiet
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  elif [ $ME = "penn" ]; then
    if [ "$SSH_TTY" ]; then
      echo " - setting up gcc 4.3 for Penn"
    fi
    source /scratch/atlas/ATLASLocalRootBase/x86_64/Gcc/gcc432_x86_64_slc5/setup.sh
  fi
fi

# ==============================================================================
# = python
# ==============================================================================
if $SETUP_PYTHON ; then
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  if [ "$ME" = "afs" ]; then
    # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    if [ $SLC_version = "5" ] && [ $PLATFORM = "x86_64" ]; then
      if [ "$SSH_TTY" ]; then
          echo " - setting up Python 2.6.5 for SLC5"
          # echo " - setting up Python 2.7.3 for SLC5"
      fi
      export PYTHONDIR=/afs/cern.ch/sw/lcg/external/Python/2.6.5p2/x86_64-slc5-gcc43-opt/
    # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    elif [ $SLC_version = "6" ] && [ $PLATFORM = "x86_64" ]; then
      if [ "$SSH_TTY" ]; then
        # echo " - setting up Python 2.6.5 for SLC6"
        echo " - setting up Python 2.7.3 for SLC6"
      fi
      export PYTHONDIR=/afs/cern.ch/sw/lcg/external/Python/2.7.3/x86_64-slc6-gcc47-opt/
    fi
    export PATH=$PYTHONDIR/bin:$PATH
    export LD_LIBRARY_PATH=$PYTHONDIR/lib:$LD_LIBRARY_PATH
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  elif [ $ME = "pennt3" ]; then
    if [ "$SSH_TTY" ]; then
      echo " - setting up python for PennT3"
    fi
    localSetupPython --pythonVersion=2.6.5-x86_64-slc5-gcc43
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  elif [ "$ME" = "penn" ]; then
    if [ "$SSH_TTY" ]; then
      echo " - setting up Python 2.5.2-i686 for Penn"
    fi
    export PYTHONDIR=/scratch/atlas/ATLASLocalRootBase/x86_64/python/2.5.2-i686
    export PATH=$PYTHONDIR/bin:$PATH
    export LD_LIBRARY_PATH=$PYTHONDIR/lib:$LD_LIBRARY_PATH
  fi
fi

# ==============================================================================
# = Personal settings
# ==============================================================================
# PATH
export PATH=$HOME/code/python/exe:$PATH
export PATH=$HOME/code/python/scripts:$PATH
export PATH=$HOME/code/root:$PATH
export PATH=$HOME/rel/root2html:$PATH

# PYTHONPATH
export PYTHONPATH=$HOME/code/python/exe:$PYTHONPATH
export PYTHONPATH=$HOME/code/python/modules:$PYTHONPATH
export PYTHONPATH=$HOME/code/python/scripts:$PYTHONPATH
export PYTHONPATH=$HOME/rel:$PYTHONPATH
# export PYTHONPATH=$HOME/rel/metaroot:$PYTHONPATH

# PYTHONSTARTUP
export PYTHONSTARTUP=$HOME/code/python/modules/pythonstartup.py

# set colors for grep
export GREP_OPTIONS='--color=auto'
export GREP_COLOR='1;32' # bright green

# ==============================================================================
# = numpy and matplotlib
# ==============================================================================
if $SETUP_NUMPY ; then
  if [ $ME = "afs" ]; then
    if [ "$SSH_TTY" ]; then
      echo " - setting up numpy"
    fi
    if [ $SLC_version = "5" ]; then
      echo " - setting up numpy for SLC5"
      export PYTHONPATH=/afs/cern.ch/user/b/bjackson/local/numpy_install/lib/python2.7/site-packages/:$PYTHONPATH
      export LD_LIBRARY_PATH=/afs/cern.ch/user/b/bjackson/local/numpy_install/lib:$LD_LIBRARY_PATH
    fi
  fi
fi

# ==============================================================================
# = Root and PyRoot
# ==============================================================================
if $SETUP_ROOT ; then
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  if [ $ME = "afs" ]; then
    # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    if [ $SLC_version = "5" ] && [ $PLATFORM = "x86_64" ]; then
      if [ "$SSH_TTY" ]; then
        echo " - setting up ROOT 5.34.09 for SLC5"
      fi
      export ROOTSYS=/afs/cern.ch/sw/lcg/app/releases/ROOT/5.34.07/x86_64-slc5-gcc43-opt/root
    # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    elif [ $SLC_version = "6" ] && [ $PLATFORM = "x86_64" ]; then
      if [ "$SSH_TTY" ]; then
        echo " - setting up ROOT 5.32.03 for SLC6"
      fi
      export ROOTSYS=/afs/cern.ch/sw/lcg/app/releases/ROOT/5.34.17/x86_64-slc6-gcc47-opt/root
    fi
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  elif [ $ME = "laptop" ]; then
    echo " - setting up ROOT 5.34.14 for laptop"
    export ROOTSYS=/Users/bjackson/local/root_v5.34.18
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  elif [ $ME = "netbook" ]; then
    echo " - setting up ROOT 5.32.03 for netbook"
    export ROOTSYS=/usr/local/root-trunk-2011-11-06
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  elif [ $ME = "pennt3" ]; then
    if [ "$SSH_TTY" ]; then
      echo " - setting up ROOT 5.32.03 for PennT3"
    fi
    localSetupROOT --rootVersion=5.32.03-x86_64-slc5-gcc4.3 --skipConfirm --quiet
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  elif [ $ME = "penn" ]; then
      echo " - setting up ROOT 5.26.00 for Penn"
    export ROOTSYS=/scratch/atlas/ATLASLocalRootBase/x86_64/root/5.26.00-slc5-gcc4.3-i686
  fi

  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  export PATH=$ROOTSYS/bin:$PATH
  export LD_LIBRARY_PATH=$ROOTSYS/lib:$LD_LIBRARY_PATH
  export PYTHONPATH=$ROOTSYS/pyroot:$ROOTSYS/lib:$PYTHONPATH

  ### # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  ### # Setup xrootd
  ### if [ $ME = "afs" ]; then
  ###   if [ $SLC_version = "5" ]; then
  ###     export XRDPATH=/afs/cern.ch/sw/lcg/external/xrootd/3.1.0p2/x86_64-slc5-gcc43-opt
  ###   elif [ $SLC_version = "6" ]; then
  ###     export XRDPATH=/afs/cern.ch/sw/lcg/external/xrootd/3.1.0p2/x86_64-slc6-gcc46-opt
  ###   fi
  ###   export LD_LIBRARY_PATH=$XRDPATH/lib64:$LD_LIBRARY_PATH
  ###   export PATH=$XRDPATH/bin:$PATH
  ### fi

  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  alias pyroot="python -i -c \"from ROOT import *; import rootlogon;\""
  alias pyrootb="python -i -c \"from ROOT import *; import rootlogon; b = TBrowser()\""
fi

# ==============================================================================
# = castor
# ==============================================================================
if [ $ME = "afs" ]; then
  export STAGE_SVCCLASS="atldata"
fi

# ==============================================================================
# = Athena
# ==============================================================================
if [ $ME != "laptop" ] && [ "$ME" != "netbook" ]; then
  alias setup_cmt="source /afs/cern.ch/sw/contrib/CMT/v1r21/mgr/setup.sh"
  alias setup_pathena="source /afs/cern.ch/atlas/offline/external/GRID/DA/panda-client/latest/etc/panda/panda_setup.sh"
  export PATHENA_GRID_SETUP_SH="/afs/cern.ch/project/gd/LCG-share/current/etc/profile.d/grid_env.sh"

  export AtlasSetup=/afs/cern.ch/atlas/software/dist/AtlasSetup
  alias asetup='source $AtlasSetup/scripts/asetup.sh'
fi

if [ "$ME" = "laptop" ] || [ "$ME" = "netbook" ] || [ "$SSH_TTY" ]; then
  echo -ne "$NC"
  echo -e "________________________________________________________________________________"
fi

# EOF
